@model HospitalSystem.Models.Doctor

@{
    ViewBag.Title = "Edit";
    string dob = Model.DOB.ToString("yyyy-MM-dd");
}
@if (User.IsInRole(HospitalSystem.Models.MyConstants.RoleDoctor))
{

    @Html.Partial("~/Views/Doctors/Header.cshtml");
}
else if (User.IsInRole(HospitalSystem.Models.MyConstants.RoleAdmin))
{
    @Html.Partial("~/Views/Admins/Header.cshtml");
}  

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <section id="ozel-sayfa">

        <h2 style="margin-left: 13%;">Edit Account</h2>
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.UserId)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="container">

            <div class="kisisel-bilgiler">
                <ul>
                    <li>
                        <span>Name:</span>    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </li>
                    <li>
                        <span>Surname:</span>  @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                    </li>
                    <li>
                        <span>Date of Birth:</span>     @Html.EditorFor(model => dob, new
                                                   {
                                                       htmlAttributes = new
                                                       {
                                                           @class = "form-control",
                                                           @type = "date"
                                                       }
                                                   })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </li>
                    <li>
                        <span>Mobile Number:</span>     @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </li>
                    <li>
                        <span>E-mail Address:</span>   @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </li>
                    <li>
                        <span>Department: </span>    @Html.DropDownList("CurDeptartmentID", null, (User.IsInRole(HospitalSystem.Models.MyConstants.RoleDoctor)) ? (object)new { htmlAttributes = new { @disabled = "", @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CurDeptartmentID, "", new { @class = "text-danger" })
                    </li>
                    <li> <button>Send</button></li>
                </ul>
            </div>
            <div class="hesap-bilgileri">

                <ul>
                    <li>
                        <span>Password:</span> <input type="password" name="password" value="" />
                        @ViewBag.PassMess
                    </li>
                    <li><span>Password Confirm:</span> <input type="password" name="passwordconfirm" value="" /></li>
                    <li>
                        <span>Gender</span><br /><br />
                        @Html.RadioButtonFor(model => model.Gender, true, new { @style = "width:initial;" })  Male
                        <br />  @Html.RadioButtonFor(model => model.Gender, false, new { @style = "width:initial;" }) Female
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </li>

                    <li>
                        <span>Languages:</span>    @Html.EditorFor(model => model.Languages, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Languages, "", new { @class = "text-danger" })
                    </li>
                    <li>
                        <span>Specializations:</span>    @Html.EditorFor(model => model.Specializations, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
                    </li>
                    <li>
                        <span>Experience:</span>    @Html.EditorFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
                    </li>

                    <li>
                        <span>Salary:</span>
                   
                            @Html.EditorFor(model => model.Salary, (User.IsInRole(HospitalSystem.Models.MyConstants.RoleDoctor)) ? (object)new { htmlAttributes = new { @disabled = "", @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control" } })
                     
                        @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                    </li><!--roleadmin de düzenlenebilir. roledoctorda disabled olmalı-->

                </ul>
            </div>


        </div>

    </section>
}

